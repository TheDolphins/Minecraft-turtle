-- A part of the Water Excavation Programs
-- 
-- place a turtle at the north-east corner of the square, facing north toward the wall,
-- below the water level at the position '>' below ('*' are the dirt)
-- 
--         *
--        >**
-- 
-- ... and run this program. turtle will lower the whole bounding box by one level
--
local n = 48

local t = turtle

function placeBack()
    t.turnRight()
    t.turnRight()
    t.place()
    t.turnLeft()
    t.turnLeft()
end

function corner()
    t.dig()
    t.forward()
    t.placeDown()

    -- do the same with the next block
    t.turnLeft()
    t.dig()
    t.forward()
      -- pull down the edge
      t.dig()
      t.forward()
      t.placeDown()
      t.back()

      t.turnRight()
        -- pull down the other edge
        t.dig()
        t.forward()
        t.placeDown()
        t.back()
      t.turnLeft()
      
    t.placeDown()
    t.back()
    t.turnRight()
    
    t.dig()
    t.forward()
    t.placeDown()
    
    t.back()
      -- do the same with the next block
      t.turnLeft()
      t.place()
      t.turnRight()
    t.back()
    t.place()
    
    t.up()
    t.dig()
      -- do the same with the next block
      t.forward()
      t.turnLeft()
      t.dig()
      t.turnRight()
      t.back()
   t.down()
   
   t.turnLeft() -- orient itself for the next row
end

function normal()
    t.dig()
    t.forward()
    t.placeDown()

    t.dig()
    t.forward()
    t.placeDown()

    t.back()
    t.back()
    t.place()

    t.digUp()
    t.up()
    t.dig()
    t.down()

    t.turnLeft()
    t.dig()
    t.forward()
    t.turnRight()
end

os.loadAPI("common")
if not common.select("minecraft:cobblestone") then
  common.die("I need some cobblestones!")
end

function main()
  for j=1,4 do
    for i=1,n-4 do
      normal()
    end
    corner()
  end
  t.turnLeft();
  sweep();
  t.turnRight();
end

function sweep()
  for j=1,n-3 do  -- temporarily set initial value to 2 from 1
    for i=1,n-3 do
        t.forward()
    end

    if (j%2==1) then
      t.turnLeft()
      t.forward()
      t.turnLeft()
    else
      turtle.turnRight()
      turtle.forward()
      turtle.turnRight()
    end
  end
end

main()

